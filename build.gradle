// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.0.2' apply false
    id 'com.android.library' version '8.0.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
    id 'com.google.gms.google-services' version '4.3.15' apply false
    id 'jacoco' apply true
}

tasks.create(name: "unitTestCoverageReport", type: JacocoReport, dependsOn: "testLocalDebugUnitTest") {
    group = "Verification" // existing group containing tasks for generating linting reports etc.
    description = "Generate Jacoco coverage reports for the 'local' debug build."

    reports {
        // human readable (written into './build/reports/jacoco/unitTestCoverageReport/html')
        html {
            enabled true
        }
        // CI-readable (written into './build/reports/jacoco/unitTestCoverageReport/unitTestCoverageReport.xml')
        xml {
            enabled true
        }
    }

    // Execution data generated when running the tests against classes instrumented by the JaCoCo agent.
    // This is enabled with 'enableUnitTestCoverage' in the 'debug' build type.
    executionData.from = "${project.buildDir}/outputs/unit_test_code_coverage/localDebugUnitTest/testLocalDebugUnitTest.exec"

    // Compiled Kotlin class files are written into build-variant-specific subdirectories of 'build/tmp/kotlin-classes'.
    classDirectories.from = "${project.buildDir}/tmp/kotlin-classes/localDebug"

    // To produce an accurate report, the bytecode is mapped back to the original source code.
    sourceDirectories.from = "${project.projectDir}/src/main/java"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses true
    jacoco.excludes = ['jdk.internal.*']
}